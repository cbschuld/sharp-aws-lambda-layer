name: Build Sharp Lambda Layers

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-layers:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: x64
            image: public.ecr.aws/lambda/nodejs:20
          - arch: arm64
            image: public.ecr.aws/lambda/nodejs:20-arm64

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Build & zip Sharp layer (${{ matrix.arch }})
        run: |
          # mount workspace into the Lambda build image
          docker run --rm \
            -v "${{ github.workspace }}":/project \
            -w /project \
            ${{ matrix.image }} \
            bash -exlc "
              # install only runtime deps for Sharp
              npm ci --no-optional --no-audit --production --arch=${{ matrix.arch }} --platform=linux
              
              # stage into the Lambda layer layout
              mkdir -p layer/nodejs/node_modules
              cp -R node_modules/sharp layer/nodejs/node_modules/

              # zip it
              (cd layer && zip -r ../sharp-layer-${{ matrix.arch }}.zip .)
            "

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sharp-layer-${{ matrix.arch }}
          path: sharp-layer-${{ matrix.arch }}.zip

  release:
    needs: build-layers
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Download Sharp zips
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create or update GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ github.sha }}
          release_name: Sharp Lambda Layer
          file: dist/*.zip
          file_glob: true
          overwrite: true
          body: |
            AWS Lambda layers for Sharp (x64 and arm64).  